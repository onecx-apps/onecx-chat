# Default values for ollama.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
# gpu not working with default image ollama:ollama version 0.1.9
#  repository: 728986473007.dkr.ecr.us-east-1.amazonaws.com/onecx/ollama
#  tag: "0.1.9-gpu"
  repository: ollama/ollama
#  tag: "0.1.13"
  tag: "latest"
  pullPolicy: Always
  

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Define environment variables

env:
#- name: OLLAMA_DEBUG
#  value: "1"
- name: PYTORCH_CUDA_ALLOC_CONF
  value: "max_split_size_mb:512"
# gpu not working with default image ollama:ollama
#  - name: PATH
#    value: /usr/local/nvidia/bin:/usr/local/nvidia/lib64:/usr/bin:/usr/sbin:/bin:/sbin
#  - name: LD_LIBRARY_PATH
#    value: /usr/local/nvidia/lib64
caddyenv:
- name: CADDY_USERNAME
  value: "API_KEY"
- name: CADDY_PASSWORD_HASH #5a853800-fb13-4564-a098-a1fffb44a32e
  value: "$2a$14$ZUZoeNPZ2Y0GgdxDOXSeaOE4wrAePYRaXkVSwB5Ndk1IeyChhzMRa"

postInstallCmd: |
  #!/bin/sh
  
  ######################################################################################################################################################################

  #FILE_PATH=/root/.ollama/custom_model/leo-hessianai-13b-chat.Q8_0.gguf

  # Check if the file exists
  #if [ -e "$FILE_PATH" ]; then
  #  echo "File already exists. Skipping download."
  #else
  #  # Download the file if it doesn't exist
  #  huggingface-cli download TheBloke/leo-hessianai-13B-chat-GGUF leo-hessianai-13b-chat.Q8_0.gguf --local-dir /root/.ollama/custom_model --local-dir-use-symlinks False
  #
  #  echo "File downloaded successfully."

   # echo "Remove old models"
   # ollama rm leo_hessianai

    #echo "Create models by modelfile"
    #ollama create leo_hessianai -f /opt/llm/leo-hessianai/leo_hessianai_modelfile

    #echo "Model created"
  
  #fi
  
  echo "Pull standard models"
  #ollama pull llama2:latest
  #ollama pull llama2:13b
  #ollama pull llama2:13b-chat-q4_0
  #ollama pull llama2:70b
  
  
  #ollama pull mixtral
  #ollama pull llava:34b
  
  

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  ports:
    - name: https
      port: 443
      targetPort: http
      protocol: TCP

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     nvidia.com/gpu: 5
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


# The volume where we store the models and downloaded file cachehelm lint
model:
  persistence:
    size: 100Gi
    accessModes:
      - ReadWriteOnce
    # Optional. e.g. "gp2-unencrypted"
    storageClassName: genai-gp2

# Additional volumes on the output Deployment definition.
volumes:
  - name: ollama
    persistentVolumeClaim:
      claimName: ollama-model
  - name: leo-hessianai-volume
    configMap:
      name: leo-hessianai-configmap
  - name: caddy-config
    configMap:
      name: caddy-configmap      

# Additional volumeMounts on the output Deployment definition. ollama:/root/.ollama
volumeMounts:
  - name: ollama
    mountPath: "/root/.ollama"
#    readOnly: true
  - name: leo-hessianai-volume
    mountPath: "/opt/llm/leo-hessianai"

nodeSelector: {}

tolerations: []

affinity: {}


hooks:
  postInstall:
    enabled: true
  hostedZoneId: "Z04691503R1QKP3NPCK74"
  recordSetName: "ollama.one-cx.org"
  namespace: "genai"
  releaseName: "ollama"
  region: "us-east-1"
  loadBalancerHostedZoneId: "Z35SXDOTRQ7X7K"
  acmCertificateArn: "arn:aws:acm:us-east-1:728986473007:certificate/ecbebcf9-9a89-4f42-bb0b-141b413aa5eb"