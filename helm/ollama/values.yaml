# Default values for ollama.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
# gpu not working with default image ollama:ollama
  repository: 728986473007.dkr.ecr.us-east-1.amazonaws.com/onecx/ollama
#  repository: ollama/ollama
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.9-gpu"
#  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Define environment variables

env: []
# gpu not working with default image ollama:ollama
#  - name: PATH
#    value: /usr/local/nvidia/bin:/usr/local/nvidia/lib64:/usr/bin:/usr/sbin:/bin:/sbin
#  - name: LD_LIBRARY_PATH
#    value: /usr/local/nvidia/lib64


postInstallCmd: |
  #!/bin/sh

  FILE_PATH=/root/.ollama/custom_model/em_german_13b_v01.Q4_K_M.gguf

  # Check if the file exists
  if [ -e "$FILE_PATH" ]; then
    echo "File already exists. Skipping download."
  else
    # Download the file if it doesn't exist
    huggingface-cli download TheBloke/em_german_13b_v01-GGUF em_german_13b_v01.Q4_K_M.gguf --local-dir /root/.ollama/custom_model --local-dir-use-symlinks False
    echo "File downloaded successfully."
  fi

  ollama rm emgerman_llama2
  echo "Old model removed"

  ollama create emgerman_llama2 -f /opt/llm/em_german_modelfile
  echo "Model created"


#postInstallCmd: "huggingface-cli download TheBloke/em_german_13b_v01-GGUF em_german_13b_v01.Q4_K_M.gguf --local-dir /root/.ollama/custom_model --local-dir-use-symlinks False && ollama create emgerman_llama2 -f /opt/llm/em_german_modelfile"
#postInstallCmd: "ollama pull llama2"
#postInstallCmd: "ollama pull falcon:40b-instruct-q4_1" 

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: LoadBalancer
  ports:
    - name: http
      port: 80
      targetPort: 11434
      protocol: TCP

livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 5
  timeoutSeconds: 1
  failureThreshold: 6
  successThreshold: 1

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
   limits:
     nvidia.com/gpu: 1
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80


# The volume where we store the models and downloaded file cachehelm lint
model:
  persistence:
    size: 100Gi
    accessModes:
      - ReadWriteOnce
    # Optional. e.g. "gp2-unencrypted"
    storageClassName: genai-gp2

# Additional volumes on the output Deployment definition.
volumes:
  - name: ollama
    persistentVolumeClaim:
      claimName: ollama-model
  - name: config-volume
    configMap:
      name: em-german-llama2-configmap      

# Additional volumeMounts on the output Deployment definition. ollama:/root/.ollama
volumeMounts:
  - name: ollama
    mountPath: "/root/.ollama"
#    readOnly: true
  - name: config-volume
    mountPath: "/opt/llm"

nodeSelector: {}

tolerations: []

affinity: {}


hooks:
  postInstall:
    enabled: true
  hostedZoneId: "Z04691503R1QKP3NPCK74"
  recordSetName: "ollama.one-cx.org"
  namespace: "genai"
  releaseName: "ollama"
  region: "us-east-1"
  loadBalancerHostedZoneId: "Z35SXDOTRQ7X7K"